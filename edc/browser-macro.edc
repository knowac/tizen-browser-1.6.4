/*
 * Copyright 2012  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.tizenopensource.org/license
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
#define GENLIST_PART_BOTTOM_LINE_INC 199 199 199 255
#define GENLIST_PART_BG_COLOR_INC 249 249 249 255
#define GENLIST_PART_BG_SELECTED_COLOR_INC 50 65 74 180
#define GENLIST_PART_TEXT_SELECTED_COLOR_INC 255 255 255 255
#define GENLIST_PART_TEXT_COLOR_INC 0 0 0 255

#define FONT_BLD HelveticaNeueBld
#define FONT_MED HelveticaNeueMed
#define FONT_ROM HelveticaNeueRom
#define FONT_LIG HelveticaNeueLig

#define PADDING(title, w, h, fixed_w, fixed_h, align_w, align_h, l, t, r, b, rel1_to, rel2_to) \
		part { name: title; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				visible: 0; \
				min: w h; \
				max: w h; \
				fixed: fixed_w fixed_h; \
				align: align_w align_h; \
				rel1 { relative: l t; to: rel1_to; } \
				rel2 { relative: r b; to: rel2_to; } \
			} \
		}


#define BUTTON(button_name, normal_image, press_image, l, r, t, b) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=30 align=center color=#FFFFFF wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				scale: 1; \
				mouse_events: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: normal_image; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 255 255 255 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}

#define ZOOM_BUTTON(button_name, normal_image, press_image, disable_image, l, r, t, b) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
			image: disable_image COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=30 align=center color=#4E4945 wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				scale: 1; \
				mouse_events: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: disable_image; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 255 255 255 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
					fixed: 1 1; \
					rel1 { relative: 0.0 0.0; to: "button_image"; } \
					rel2 { relative: 1.0 1.0; to: "button_image"; } \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}

#define TITLE_BUTTON(button_name, normal_image, press_image, l, r, t, b) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=30 align=center color=#FFFFFF wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				scale: 1; \
				mouse_events: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: normal_image; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 255 255 255 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}

#define BUTTON_WITH_TEXT(button_name, normal_image, press_image, l, r, t, b, bg_w, bg_h) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=24 align=center color=#FFFFFF wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					align: 0.0 0.5; \
					min: bg_w bg_h; \
					max: bg_w bg_h; \
					fixed: 1 1; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: normal_image; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 255 255 255 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}

#define BUTTON_WITH_BG(button_name, normal_image, press_image, main_image, main_image_disable, l, r, t, b, bg_w, bg_h, main_image_w, main_image_h) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
			image: main_image COMP; \
			image: main_image_disable COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=21 align=center color=#FFFFFF wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					align: 0.0 0.5; \
					min: bg_w bg_h; \
					max: bg_w bg_h; \
					fixed: 1 1; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: normal_image; \
				} \
			} \
			part { name: "main_image"; \
				mouse_events: 1; \
				scale: 1; \
				repeat_events: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					min: main_image_w main_image_h; \
					max: main_image_w main_image_h; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.0 0.0; to: "button_image"; } \
					rel2 { relative: 1.0 1.0; to: "button_image"; } \
					image { \
						normal: main_image; \
					} \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: main_image_disable; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 0 0 0 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				target: "main_image"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				target: "main_image"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}

#define FIND_BUTTON_WITH_BG(button_name, normal_image, press_image, arrow_image, disable_image, l, r, t, b, bg_w, bg_h, main_image_w, main_image_h) \
	group { name: "elm/button/base/browser/"#button_name; \
		images { \
			image: normal_image COMP; \
			image: press_image COMP; \
			image: arrow_image COMP; \
			image: disable_image COMP; \
		} \
		styles { \
			style { name: #button_name"btn_textblock_style"; \
				base: "font=FONT_CONTENT font_size=21 align=center color=#FFFFFF wrap=char"; \
				tag:  "br" "\n"; \
				tag:  "hilight" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "b" "+ font=FONT_CONTENT:style=Bold"; \
				tag:  "tab" "\t"; \
			} \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					align: 0.0 0.5; \
					min: bg_w bg_h; \
					max: bg_w bg_h; \
					fixed: 1 1; \
					image { \
						normal: normal_image; \
						border: l r t b; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: press_image; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					image.normal: disable_image; \
				} \
			} \
			part { name: "arrow_image"; \
				mouse_events: 1; \
				scale: 1; \
				repeat_events: 1; \
				effect:        SOFT_SHADOW; \
				description { state: "default" 0.0; \
					min: main_image_w main_image_h; \
					max: main_image_w main_image_h; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.0 0.0; to: "button_image"; } \
					rel2 { relative: 1.0 1.0; to: "button_image"; } \
					image { \
						normal: arrow_image; \
					} \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXTBLOCK; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					rel1 { relative: 0.1 0; to: "button_image"; } \
					rel2 { relative: 0.9 1; to: "button_image"; } \
					color: 0 0 0 255; \
					text { \
						style: #button_name"btn_textblock_style"; \
						min: 0 0; \
						max: 0 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit:  "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit:  "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,clicked,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				target: "button_image"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				target: "arrow_image"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
		} \
	}
#define BROWSER_GENLIST_PART_DISCLIP \
         part { name: "disclip"; \
            type: RECT; \
            description { state: "default" 0.0; \
               rel1.to: "base"; \
               rel2.to: "base"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color: 255 255 255 64; \
            } \
         }

#define BROWSER_GENLIST_TRANSPARENT_PART \
         part { name: "elm.between.layer"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 1; \
            description { state: "default" 0.0; \
               rel1.to: "base"; \
               rel2.to: "base"; \
               color: 0 0 0 0; \
            } \
            description { state: "repeat_events" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_BASE( param_item_height ) \
         part { name: "base"; \
            clip_to: "disclip"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 0 param_item_height; \
               image.normal: "theme/00_sweep_list_bg.png"; \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_BOTTOM_LINE \
         part { name: "bottom_line"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               min: 0 1; \
               fixed: 0 1; \
               visible: 1; \
               color: 212 212 212 255; \
               rel1 { \
                  relative: 0.0 1.0; \
                  offset: 0 -1; \
                  to: "base"; \
               } \
               rel2.to: "base"; \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_PADDING_LEFT( param_padding_size ) \
         part { name: "base.padding.left"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel1.to: "base"; \
               rel2 { \
                  relative: 0 1; \
                  to: "base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_PADDING_RIGHT( param_padding_size ) \
         part { name: "base.padding.right"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel1 { \
                  relative: 1 0; \
                  to: "base"; \
               } \
               rel2.to: "base"; \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_PADDING_BOTTOM( param_padding_size ) \
         part { name: "base.padding.bottom"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               align: 0.5 1; \
               rel1 { \
                  relative: 0 1; \
                  to: "base"; \
               } \
               rel2 { \
                  relative: 1 1; \
                  to: "base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_TEXT \
         part { name: "elm.base.text"; \
            type: TEXT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
				/* \
               min: 0 36; \
               */ \
               min: 0 54; \
               fixed: 0 1; \
               align: 0.5 0; \
               rel1 { \
                  relative: 1 0; \
                  to_x: "base.padding.left"; \
                  to_y: "base"; \
               } \
               rel2 { \
                  relative: 0 0; \
                  to_x: "base.padding.right"; \
                  to_y: "base"; \
               } \
               color: 255 255 255 255; \
               text { \
                  font: "SLP:style=Roman"; \
					/* \
                  size: 22; \
					*/ \
                  size: 33; \
                  min: 0 1; \
                  align: 0.5 0.5; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_PADDING_CENTER_VERTICAL( param_padding_size ) \
         part { name: "base.padding.center.vertical"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               align: 0.5 0.5; \
               rel1 { \
                  relative: 0.5 0; \
                  to: "base"; \
               } \
               rel2 { \
                  relative: 0.5 1; \
                  to: "base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_PADDING_CENTER_HORIZONTAL( param_padding_size ) \
         part { name: "base.padding.center.horizontal"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 0 1; \
               visible: 0; \
               align: 0.5 0.5; \
               rel1 { \
                  relative: 0 0.5; \
                  to: "base"; \
               } \
               rel2 { \
                  relative: 1 0.5; \
                  to: "base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_BUTTON_1 \
         part { name: "elm.base.swallow.button1"; \
            type: SWALLOW; \
            clip_to: "disclip"; \
            description { state: "default" 0.0; \
               rel1 { \
                  relative: 1 1; \
                  to_x: "base.padding.left"; \
                  to_y: "base.padding.center.horizontal"; \
               } \
               rel2 { \
                  relative: 0 0; \
                  to_x: "base.padding.center.vertical"; \
                  to_y: "base.padding.bottom"; \
               } \
            } \
         }

#define BROWSER_GENLIST_BASE_PART_BUTTON_2 \
         part { name: "elm.base.swallow.button2"; \
            type: SWALLOW; \
            clip_to: "disclip"; \
            description { state: "default" 0.0; \
               rel1 { \
                  relative: 1 1; \
                  to_x: "base.padding.center.vertical"; \
                  to_y: "base.padding.center.horizontal"; \
               } \
               rel2 { \
                  relative: 0 0; \
                  to_x: "base.padding.right"; \
                  to_y: "base.padding.bottom"; \
               } \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_BASE( param_item_height ) \
         part { name: "slide_base"; \
            clip_to: "disclip"; \
            type: RECT; \
            repeat_events: 1; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 0 param_item_height; \
               color: 246 245 237 255; \
               rel1.to: "base"; \
               rel2.to: "base"; \
            } \
            description { state: "hide" 0.0; \
               inherit: "default" 0.0; \
               rel1 { relative: 0.025 0.0; } \
               rel2 { relative: 1.025 1.0; } \
            } \
            description { state: "hide" 0.1; \
               inherit: "default" 0.0; \
               rel1 { relative: 0.13 0.0; } \
               rel2 { relative: 1.13 1.0; } \
            } \
            description { state: "hide" 0.2; \
               inherit: "default" 0.0; \
               rel1 { relative: 0.5 0.0; } \
               rel2 { relative: 1.5 1.0; } \
            } \
            description { state: "hide" 0.3; \
               inherit: "default" 0.0; \
               rel1 { relative: 1.0 0.0; } \
               rel2 { relative: 2.0 1.0; } \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_BOTTOM_LINE \
         part { name: "slide_bottom_line"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               min: 0 1; \
               fixed: 0 1; \
               visible: 1; \
               color: 212 212 212 255; \
               rel1 { \
                  relative: 0.0 1.0; \
                  offset: 0 -1; \
                  to: "slide_base"; \
               } \
               rel2.to: "slide_base"; \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_PADDING_TOP( param_padding_size ) \
       part { name: "slide_base.padding.top"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { \
               state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               align: 0.5 0.0; \
               rel1 { \
                  relative: 0 0; \
                  to: "slide_base"; \
               } \
               rel2 { \
                  relative: 1 0; \
                  to: "slide_base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_PADDING_BOTTOM( param_padding_size ) \
       part { name: "slide_base.padding.bottom"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            scale: 1; \
            description { \
	       state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               align: 0.5 1; \
               rel1 { \
                  relative: 0 1; \
                  to: "slide_base"; \
               } \
               rel2 { \
                  relative: 1 1; \
                  to: "slide_base"; \
               } \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_PADDING_LEFT( param_padding_size ) \
         part { name: "slide_base.padding.left"; \
            type: RECT; \
            scale: 1; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel1.to: "slide_base"; \
               rel2 { \
                  relative: 0 1; \
                  to: "slide_base"; \
               } \
               align: 0.0 0.0; \
            } \
         }

#define BROWSER_GENLIST_SLIDE_PART_PADDING_RIGHT( param_padding_size ) \
       part { name: "slide_base.padding.right"; \
            type: RECT; \
            scale: 1; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel1 { \
                  relative: 1 0; \
                  to: "slide_base"; \
               } \
               rel2.to: "slide_base"; \
               align: 1.0 0.0; \
            } \
         }

#define BEAT_GENLIST_PART_BASE( param_item_height ) \
         part { name: "base"; \
            type: RECT; \
            repeat_events: 1; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 0 param_item_height; \
               color: GENLIST_PART_BG_COLOR_INC; \
            } \
         }

#define BEAT_GENLIST_PART_BG_IMAGE \
         part { name: "bg_image"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               visible: 0; \
               color: GENLIST_PART_BG_SELECTED_COLOR_INC; \
            } \
            description { state: "selected" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         }

#define BEAT_GENLIST_PART_BOTTOM_LINE \
         part { name: "bottom_line"; \
            type: RECT; \
            clip_to: "disclip"; \
            mouse_events: 0; \
            description { state: "default" 0.0; \
               min: 0 1; \
               fixed: 0 1; \
               visible: 1; \
               color: GENLIST_PART_BOTTOM_LINE_INC; \
               rel1 { \
                  relative: 0.0 1.0; \
                  offset: 0 -1; \
               } \
            } \
         }

#define BEAT_GENLIST_PART_PADDING_TOP( param_padding_size ) \
       part { name: "elm.padding.top"; \
            type: RECT; \
            scale: 1; \
            description { \
               state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               align: 0.0 0.0; \
            } \
         }

#define BEAT_GENLIST_PART_PADDING_BOTTOM( param_padding_size ) \
       part { name: "elm.padding.bottom"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               align: 0.0 1.0; \
            } \
         }

#define BEAT_GENLIST_PART_PADDING_LEFT( param_padding_size ) \
         part { name: "elm.padding.left"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel2.relative: 0.0 1.0; \
               align: 0.0 0.0; \
            } \
         }

#define BEAT_GENLIST_PART_PADDING_RIGHT( param_padding_size ) \
       part { name: "elm.padding.right"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: param_padding_size 0; \
               fixed: 1 0; \
               visible: 0; \
               rel1.relative: 1.0  0.0; \
               align: 1.0 0.0; \
            } \
         }

#define BEAT_GENLIST_PART_DISCLIP \
        part { name: "disclip"; \
            type: RECT; \
            description { state: "default" 0.0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color: 255 255 255 64; \
            } \
         }

#define BEAT_GENLIST_SELECT_ALL_PART_DISCLIP \
        part { name: "disclip"; \
            type: RECT; \
            description { state: "default" 0.0; \
               rel1.to: "base"; \
               rel2.to: "base"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color: 255 255 255 64; \
            } \
         }

