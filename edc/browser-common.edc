/*
 * Copyright 2013  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.1 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contact: Karthick R <karthick.r@samsung.com>
 *
 */

#include "config.edc"
#include "macro.edc"

collections {
#if defined(TIZEN_LITE)
	base_scale: 1.8;
#endif
     RESOURCE_IMAGE_LOSSY("I01_more_popup_icon_delete.png")
     RESOURCE_IMAGE_LOSSY("00_icon_select_all.png")
     RESOURCE_IMAGE_LOSSY("I01_icon_add.png")
     RESOURCE_IMAGE_LOSSY("I01_more_popup_icon_clear_history.png")

#define NOCONTENT_TEXT_BLOCK_STYLE_COLOR_INC "#6E6F76"
#define NOCONTENT_TEXT_BLOCK_STYLE_COLOR_DIM_INC "#B1B1B1"
#define NOCONTENT_HELP_TEXT_BLOCK_STYLE_COLOR_INC "#808080"
#define NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC   36
#define NOCONTENT_HELP_TEXT_BLOCK_TEXT_SIZE_INC 32
#define NOCONTENT_IMAGE_WIDTH_HEIGHT_INC     252 252
#define NOCONTENT_BG_COLOR_INC               0 0 0 0
#define NOCONTENT_TEXT_STYLE_BG_MIN_INC      0 68
#define NOCONTENT_BASE_SEARCH_PADDING_INC    40
#define NOCONTENT_PORTRAIT_HELP_TEXT_STYLE_BG_MIN_INC 0 152
#define NOCONTENT_LANDSCAPE_HELP_TEXT_STYLE_BG_MIN_INC 0 78
#define NOCONTENT_IMAGE_COLOR_INC            128 128 128 255
#define NOCONTENT_SWALLOW_AREA_MIN_INC       0 74
#define NOCONTENT_PORTRAIT_AFTER_HELP_TEXT_PADDING_INC 70 94
#define NOCONTENT_LANDSCAPE_AFTER_HELP_TEXT_PADDING_INC 180 18
#define NOCONTENT_PORTRAIT_AFTER_TEXT_PADDING_INC    70 96
#define NOCONTENT_LANDSCAPE_AFTER_TEXT_PADDING_INC    180 16
#define NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_INC 0 320
#define NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_INC 0 320
#define NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_WITH_TEXT 0 736
#define NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_WITH_TEXT 0 504
	group {
		name: "elm/layout/nocontents/full";
		styles{
			style { name: "nocontent_style";
				base: "font=Tizen:style=Bold font_size="NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC" align=center color=#FFFFFF color_class=T0552 text_class=T0552 wrap=mixed ellipsis=1.0";
				tag:  "br" "\n";
				tag:  "hilight" "+ font=Tizen:style=Bold";
				tag:  "b" "+ font=Tizen:style=Bold";
				tag:  "tab" "\t";
			}
			style { name: "nocontent_style_dim";
				base: "font=Tizen:style=Bold font_size="NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC" align=center color="NOCONTENT_TEXT_BLOCK_STYLE_COLOR_DIM_INC" wrap=mixed ellipsis=1.0 text_class=tizen";
				tag:  "br" "\n";
				tag:  "hilight" "+ font=Tizen:style=Bold";
				tag:  "b" "+ font=Tizen:style=Bold";
				tag:  "tab" "\t";
			}
			style { name: "nocontent_help_text";
				base: "font=Tizen:style=Regular font_size="NOCONTENT_HELP_TEXT_BLOCK_TEXT_SIZE_INC" align=left color=#FFFFFF color_class=T055 text_class=T055 wrap=mixed ellipsis=1.0";
				tag:  "br" "\n";
				tag:  "hilight" "+ font=Tizen:style=Regular";
				tag:  "b" "+ font=Tizen:style=Regular";
				tag:  "tab" "\t";
			}
		}
		script {
			public center_align = 0;
			public landscape_mode = 0;
		}
		images {
			image: "I01.no_contents.png" COMP;
		}
		parts {
			part { name: "bg";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					color: 232 232 232 255;
					min: NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_INC;
					rel1 {
						relative: 0.0 0.5;
					}
					rel2 {
						relative: 1.0 0.5;
					}
				}
				description { state: "help_txt_port_centre_align";
					inherit: "default" 0.0;
					min: NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_WITH_TEXT;
				}
				description { state: "landscape" 0.0;
					inherit: "default" 0.0;
					min: NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_INC;
				}
				description { state: "help_txt_lands_centre_align";
					inherit: "default" 0.0;
					min: NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_WITH_TEXT;
				}
			}
			part { name: "nocontents.image";
				description { state: "default" 0.0;
					fixed: 1 1;
					min: NOCONTENT_IMAGE_WIDTH_HEIGHT_INC;
					align: 0.5 0.0;
					rel1 {
						relative: 0.5 0.0;
						to: "bg";
					}
					rel2 {
						relative: 0.5 0.0;
						to: "bg";
					}
					image {
						normal: "I01.no_contents.png";
					}
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
				}
			}
			part { name: "elm.text";
				type: TEXTBLOCK;
				description { state: "default" 0.0;
					min: NOCONTENT_TEXT_STYLE_BG_MIN_INC;
					align: 0.5 0.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						to_y: "nocontents.image";
					}
					rel2 {
						relative: 1.0 1.0;
						to_y: "nocontents.image";
					}
					text {
						style: "nocontent_style";
						min: 0 1;
						max: 0 1;
					}
				}
				description { state: "disabled" 1.0;
					inherit: "default" 0.0;
					text {
						style: "nocontent_style_dim";
						min: 0 1;
						max: 0 1;
					}
				}
			}
			part { name: "padding_after_text";
				mouse_events: 0;
				type: SPACER;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					min: NOCONTENT_PORTRAIT_AFTER_TEXT_PADDING_INC;
					fixed: 1 1;
					rel1 {
						relative: 0.0 1.0;
						to_y: "elm.text";
					}
					rel2 {
						relative: 0.0 1.0;
						to_y: "elm.text";
					}
				}
				description { state: "landscape" 0.0;
					inherit: "default" 0.0;
					min: NOCONTENT_LANDSCAPE_AFTER_TEXT_PADDING_INC;
				}
			}
			part { name: "elm.help.text";
				type: TEXTBLOCK;
				description { state: "default" 0.0;
					align: 0.5 0.0;
					min: NOCONTENT_PORTRAIT_HELP_TEXT_STYLE_BG_MIN_INC;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to: "padding_after_text";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "pad_after_help_text";
						to_y: "padding_after_text";
					}
					text {
						style: "nocontent_help_text";
						align: 0.0 0.5;
						min: 0 1;
						max: 0 1;
					}
				}
				description { state: "landscape" 0.0;
					inherit: "default" 0.0;
					min: NOCONTENT_LANDSCAPE_HELP_TEXT_STYLE_BG_MIN_INC;
				}
			}
			part { name: "pad_after_help_text";
				mouse_events: 0;
				type: SPACER;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					min: NOCONTENT_PORTRAIT_AFTER_HELP_TEXT_PADDING_INC;
					fixed: 1 1;
					rel1 {
						relative: 1.0 1.0;
						to_y: "elm.help.text";
					}
					rel2 {
						relative: 1.0 1.0;
						to_y: "elm.help.text";
					}
				}
				description { state: "landscape" 0.0;
					inherit: "default" 0.0;
					min: NOCONTENT_LANDSCAPE_AFTER_HELP_TEXT_PADDING_INC;
				}
			}
			part { name: "swallow_area";
				type: SWALLOW;
				description { state: "default" 0.0;
					min: NOCONTENT_SWALLOW_AREA_MIN_INC;
					fixed: 1 1;
					align: 0.5 0.0;
					rel1 {
						relative: 1.0 1.0;
						to_x: "padding_after_text";
						to_y: "pad_after_help_text";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "pad_after_help_text";
					}
				}
			}
		}
		programs {
			program { name: "landscape_mode";
				source: "elm";
				signal: "elm,state,orient,90";
				script {
					set_int(landscape_mode, 1);
					if (get_int(center_align) == 1)
						set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
					else
						set_state(PART:"bg", "landscape", 0.0);
						set_state(PART:"elm.help.text", "landscape", 0.0);
						set_state(PART:"padding_after_text", "landscape", 0.0);
						set_state(PART:"pad_after_help_text", "landscape", 0.0);
				}
			}
			program { name: "landscape_mode2";
				source: "elm";
				signal: "elm,state,orient,270";
				script {
					set_int(landscape_mode, 1);
					if (get_int(center_align) == 1)
						set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
					else
						set_state(PART:"bg", "landscape", 0.0);
						set_state(PART:"elm.help.text", "landscape", 0.0);
						set_state(PART:"padding_after_text", "landscape", 0.0);
						set_state(PART:"pad_after_help_text", "landscape", 0.0);
				}
			}
			program { name: "portrait_mode";
				source: "elm";
				signal: "elm,state,orient,0";
				script {
					set_int(landscape_mode, 0);
					if (get_int(center_align) == 1)
						set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
					else
						set_state(PART:"bg", "default", 0.0);
						set_state(PART:"elm.help.text", "default", 0.0);
						set_state(PART:"padding_after_text", "default", 0.0);
						set_state(PART:"pad_after_help_text", "default", 0.0);
				}
			}
			program { name: "portrait_mode2";
				source: "elm";
				signal: "elm,state,orient,180";
				script {
					set_int(landscape_mode, 0);
					if (get_int(center_align) == 1)
						set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
					else
						set_state(PART:"bg", "default", 0.0);
						set_state(PART:"elm.help.text", "default", 0.0);
						set_state(PART:"padding_after_text", "default", 0.0);
						set_state(PART:"pad_after_help_text", "default", 0.0);
				}
			}
			program { name: "disabled";
				signal: "text,disabled";
				source: "";
				action: STATE_SET "disabled" 0.0;
				target: "elm.text";
			}
			program { name: "align_center";
				signal: "align.center";
				source: "elm";
				script {
					if (get_int(landscape_mode) == 1)
						set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
					else
						set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
						set_int(center_align, 1);
				}
			}
		}
	}

	group {
		name: "elm/layout/nocontents/common";
		inherit: "elm/layout/nocontents/full";
		images {
			image: "I01.no_contents.png" COMP;
		}
		parts {
			part { name: "nocontents.image";
				description { state: "default" 0.0;
					image {
						normal: "I01.no_contents.png";
					}
				}
			}
		}
	}
}
