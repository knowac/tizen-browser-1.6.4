#include "ImageButton.edc"
#include "../../../core/Tools/edc/ColorClasses.edc"

#define BUTTON_MIN_WIDTH_INC 50
#define BUTTON_MIN_HEIGHT_INC 50
#define BUTTON_PADDING_ICON_RIGHT_INC 14
#define BUTTON_PADDING_LEFT_RIGHT_INC 22
#define BUTTON_ICON_DEFAULT_HEIGHT_INC 50
#define BUTTON_ICON_DEFAULT_WIDTH_INC 50
#define BUTTON_PADDING_TOP_HEIGHT_INC 0
#define BUTTON_PADDING_BOTTOM_HEIGHT_INC 4
#define GLIDE_EASE_OUT(duration) CUBIC_BEZIER (duration) 0.25 0.46 0.45 1.0
#define BUTTON_CORNER_RADIUS_INC "39"


collections { base_scale: 2.6;

IMAGE_BUTTON("toolbar_input_ic_cancel.png", BUTTON_ICON_DEFAULT_HEIGHT_INC, BUTTON_ICON_DEFAULT_WIDTH_INC, "toolbar_input_ic_cancel.png")
IMAGE_BUTTON("toolbar_input_ic_refresh.png", BUTTON_ICON_DEFAULT_HEIGHT_INC, BUTTON_ICON_DEFAULT_WIDTH_INC, "toolbar_input_ic_refresh.png")
IMAGE_BUTTON("toolbar_input_ic_security.png", BUTTON_ICON_DEFAULT_HEIGHT_INC, BUTTON_ICON_DEFAULT_WIDTH_INC, "toolbar_input_ic_security.png")
IMAGE_BUTTON("toolbar_input_ic_security_off.png", BUTTON_ICON_DEFAULT_HEIGHT_INC, BUTTON_ICON_DEFAULT_WIDTH_INC, "toolbar_input_ic_security_off.png")

   group { name: "elm/button/base/custom";
      data.item: "vector_ux" "default";
      data.item: "corner_radius" BUTTON_CORNER_RADIUS_INC;
      color_classes{
         color_class{
            name: "uri_bg";
            color: 255 255 255 255;
         }
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public disabled = 0;
         public text = 0;
         public content = 0;
         public animate = 0;
         public selected = 0;
         public minw = 0;
         public minh = 0;
         public get_effect_min_size(base_effect, Float:ratio, min_w, min_h) {
            new x, y, w, h;
            get_geometry(base_effect, x, y, w, h);
            if (w > h) {
               set_float(min_w, (w - h * (1 - ratio)) / w);
               set_float(min_h, ratio);
            } else {
               set_float(min_w, ratio);
               set_float(min_h, (h - w * (1 - ratio)) / h);
            }
         }
      }
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_MIN_WIDTH_INC BUTTON_MIN_HEIGHT_INC;
            }
         }
         //Base Shape Part
         part { name: "tizen_vg_shape";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 BUTTON_MIN_HEIGHT_INC;
               rel1.relative: 0 0.0;
               rel2.relative: 1 1.0;
            }
         }
         part { name: "tizen_vg_shape_clipper";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "uri_bg";
            }
            description { state: "disabled" 0.0;
               color_class: "elm/widget/button/default/bg-disabled";
            }
         }
         part { name: "effect_spacer";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
            }
         }
         //Effect Shape Part
         part { name: "tizen_vg_shape2";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper2";
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
            }
            description { state: "ready" 0.0;
               rel1.to: "effect_spacer";
               rel2.to: "effect_spacer";
            }
            description { state: "pressed" 0.0;
               inherit: "ready" 0.0;
            }
         }
         part { name: "tizen_vg_shape_clipper2";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "transparent";
            }
            description { state: "pressed" 0.0;
               color_class: "B042";
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_PADDING_TOP_HEIGHT_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_PADDING_BOTTOM_HEIGHT_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               max: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               max: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "icon_only" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "icon_text_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               min: BUTTON_PADDING_ICON_RIGHT_INC 0;
               rel1 {
                  relative: 0.0 0.0;
                  to: "elm.text";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "elm.text";
               }
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_PADDING_ICON_RIGHT_INC 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "icon_text_padding";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "icon_text_padding";
                  to_y: "padding_right_bottom";
               }
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "icon_text_padding";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "icon_text_padding";
                  to_y: "padding_right_bottom";
               }
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "icon_only" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               max: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               align: 0.5 0.5;
               fixed: 1 1;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "icon_rect";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "button_main";
                  max: 1 0;
               }
               color_class: "elm/widget/button/default/label-default";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_main_press";
               color_class: "elm/widget/button/default/label-pressed";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_main_dim";
               color_class: "elm/widget/button/default/label-disabled";
            }
         }
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "pressed" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 163;
            }
         }
         part { name: "event";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "pressed_effect";
            action: STATE_SET "ready" 0.0;
            target: "tizen_vg_shape_clipper2";
            action: STATE_SET "custom" 0.0;
            target: "tizen_vg_shape2";
            after: "pressed_effect2";
         }
         program { name: "pressed_effect2";
            action: STATE_SET "pressed" 0.0;
            target: "elm.text";
            target: "clipper";
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
            transition: GLIDE_EASE_OUT(0.15);
            after: "pressed_effect3";
         }
         program { name: "pressed_effect3";
            script {
               set_int(animate, 0);
            }
         }
         program { name: "delay_unpressed_effect";
            in: 0.1 0.0;
            after: "unpressed_effect";
         }
         program { name: "unpressed_effect";
            script {
               if (get_int(disabled) == 0) {
                 run_program(PROGRAM:"finished_animation");
               }
            }
         }
         program { name: "finished_animation";
            action: STATE_SET "default" 0.0;
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
         }
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0) && (get_int(disabled) == 0)) {
                  new Float:rel_w, Float:rel_h;
                  stop_program(PROGRAM:"delay_unpressed_effect");
                  set_int(mouse_down, 1);
                  set_int(animate, 1);
                  custom_state(PART:"tizen_vg_shape2", "default", 0.0);
                  get_effect_min_size(PART:"effect_spacer", 0.7, minw, minh);
                  rel_w = (1 - get_float(minw)) / 2;
                  rel_h = (1 - get_float(minh)) / 2;
                  set_state_val(PART:"tizen_vg_shape2", STATE_REL1, rel_w, rel_h);
                  set_state_val(PART:"tizen_vg_shape2", STATE_REL2, 1 - rel_w, 1 - rel_h);
                  emit("elm,action,press", "");
                  run_program(PROGRAM:"pressed_effect");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                  set_int(mouse_down, 0);
                  if (get_int(disabled) == 0) {
                     if (get_int(animate) == 0) {
                        run_program(PROGRAM:"unpressed_effect");
                     } else {
                        set_state(PART:"elm.text", "pressed", 0.0);
                        set_state(PART:"clipper", "pressed", 0.0);
                        set_state(PART:"tizen_vg_shape2", "pressed", 0.0);
                        set_state(PART:"tizen_vg_shape_clipper2", "pressed", 0.0);
                        set_int(animate, 0);
                        run_program(PROGRAM:"delay_unpressed_effect");
                     }
                     emit("elm,action,unpress", "");
                  }
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               if (get_int(multi_down) == 0) {
                  if (get_int(disabled) == 0) {
                     run_program(PROGRAM:"touch_sound");
                     run_program(PROGRAM:"clicked_signal");
                  }
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "clicked_signal";
            in: 0.001 0.0;
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               set_int(content, 1);
               set_state(PART:"icon_text_padding", "visible", 0.0);
               if (get_int(text) == 1) {
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
               } else {
                  set_state(PART:"icon_rect", "icon_only", 0.0);
                  set_state(PART:"elm.swallow.content", "icon_only", 0.0);
                  set_state(PART:"padding_left_top", "icon_only", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            script {
               set_int(content, 0);
               set_state(PART:"icon_text_padding", "default", 0.0);
               set_state(PART:"icon_rect", "default", 0.0);
               set_state(PART:"elm.swallow.content", "default", 0.0);
            }
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               set_int(text, 1);
               if (get_int(content) == 1) {
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
               }
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               set_int(text, 0);
               if (get_int(content) == 1) {
                  set_state(PART:"icon_rect", "icon_only", 0.0);
                  set_state(PART:"elm.swallow.content", "icon_only", 0.0);
               }
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_int(disabled, 1);
               if (get_int(animate) == 1) return;
               set_state(PART:"clipper", "disabled", 0.0);
               set_state(PART:"tizen_vg_shape_clipper", "disabled", 0.0);
               set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_int(disabled, 0);
               set_state(PART:"clipper", "default", 0.0);
               set_state(PART:"tizen_vg_shape_clipper", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
         program { name: "pass_event_enable";
            signal: "elm,event,pass,enabled";
            source: "elm";
            script {
               set_mouse_events(PART:"event", 0);
            }
         }
         program { name: "pass_event_disable";
            signal: "elm,event,pass,disabled";
            source:"elm";
            script {
               set_mouse_events(PART:"event", 1);
            }
         }
         program { name: "repeat_event_enable";
            signal: "elm,event,repeat,enabled";
            source: "elm";
            script {
               set_repeat_events(PART:"event", 1);
            }
         }
         program { name: "repeat_event_disable";
            signal: "elm,event,repeat,disabled";
            source:"elm";
            script {
               set_repeat_events(PART:"event", 0);
            }
         }
      }
   }
}