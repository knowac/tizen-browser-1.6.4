#define SPACER_ITEM_BR(spacer_name, W, H)                           \
    part { name: spacer_name;                                       \
        type: RECT;                                                 \
        scale:1;                                                    \
        description {                                               \
            state: "default" 0.0;                                   \
            visible: 1;                                             \
            align: 1 1;                                             \
            min: W H;                                               \
            max: W H;                                               \
            fixed: 1 1;                                             \
            color: 255 255 255 10;                                  \
            rel1 { relative: 0.0 1.0; to: "bg";}                    \
            rel2 { relative: 1.0 1.0; to: "bg";}                    \
        }                                                           \
    }

#define WIDTH 374
#define HEIGHT 82

data { item: "width" WIDTH; item: "height" HEIGHT; }

collections {
    group {
        name: "elm/list/item/zoom_list";
        alias: "elm/list/item_odd/zoom_list";
        alias: "elm/list/item_compress/zoom_list";
        alias: "elm/list/item_compress_odd/zoom_list";
        min: WIDTH HEIGHT;
        max: WIDTH HEIGHT;
        images {
            image: "check_nor.png" COMP;
            image: "check_foc.png" COMP;
        }
        parts {
            part {
                name: "bg_clipper";
                            scale:1;
                mouse_events: 0;
                type: RECT;
                description {
                    state: "default" 0.0;
                    min: WIDTH HEIGHT;
                    color: 0 0 0 0;
                }
            }
            part {
                name: "bg";
                type: RECT;
                scale: 1;
                description { state: "default" 0.0;
                    visible: 1;
                    fixed: 1 1;
                    align: 0.0 0.0;
                    min: WIDTH HEIGHT;
                    max: WIDTH HEIGHT;
                    color: 18 22 34 255;
                }
                description { state: "highlight" 0.0;
                    inherit: "default" 0.0;
                }
                description { state: "focus" 0.0;
                    inherit: "default" 0.0;
                    color: 69 143 255 255;
                }
                description { state: "highlight focus" 0.0;
                    inherit: "focus" 0.0;
                }
            }
            SPACER_ITEM_BR("content_br", 374, 2)
            part {
                name: "elm.swallow.icon";
                            type: IMAGE;
                scale: 1;
                description { state: "default" 0.0;
                    visible: 0;
                    fixed: 1 1;
                    align: 0.0 0.0;
                    min: 38 38;
                    max: 38 38;
                    rel1 { relative: 1.0 0.0; to: "elm.text"; offset: 15 21;}
                    rel2 { relative: 1.0 1.0; to: "elm.text";}
                    color: 255 255 255 255;
                    image.normal: "check_foc.png";
                }
                description { state: "highlight" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
                description { state: "focus" 0.0;
                    inherit: "default" 0.0;
                }
                description { state: "highlight focus" 0.0;
                    inherit: "highlight" 0.0;
                    image.normal: "check_nor.png";
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                scale: 1;
                description { state: "default" 0.0;
                    visible: 1;
                    fixed: 1 1;
                    align: 0.0 0.0;
                    min: 281 80;
                    max: 281 80;
                    rel1 { relative: 0.0 0.0; to: "bg"; offset: 25 0;}
                    rel2 { relative: 1.0 1.0; to: "bg";}
                    color: 255 255 255 255;
                    text {
                        text: "";
                        font: "font_name";
                        size: 30;
                        align: 0 0.5;
                        }
                }
                description { state: "highlight" 0.0;
                    inherit: "default" 0.0;
                    color: 69 143 255 255;
                }
                description { state: "focus" 0.0;
                    inherit: "default" 0.0;
                }
                description { state: "highlight focus" 0.0;
                    inherit: "focus" 0.0;
                }
            }
            part {
                name: "over2";
                scale:1;
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                    rel1 { to: "bg_clipper"; relative: 0 0; }
                    rel2 { to: "bg_clipper"; relative: 1 1; }
                }
            }
        }
        programs{
            program {
                name: "mouse_in";
                signal: "mouse,in";
                source: "over2";
                script {
                    new st[31];
                    new Float:vl;
                    get_state(PART:"bg", st, 30, vl);
                    if(!strcmp(st, "highlight")) {
                        set_state(PART:"bg", "highlight focus", 0.0);
                        set_state(PART:"elm.text", "highlight focus", 0.0);
                        set_state(PART:"elm.swallow.icon", "highlight focus", 0.0);
                    }
                    else {
                        set_state(PART:"bg", "focus", 0.0);
                        set_state(PART:"elm.text", "focus", 0.0);
                        set_state(PART:"elm.swallow.icon", "focus", 0.0);
                    }
                }
            }
            program {
                name: "mouse_out";
                signal: "mouse,out";
                source: "over2";
                action: STATE_SET "default" 0.0;
                target: "bg";
                target: "elm.text";
                target: "elm.swallow.icon";
                script {
                    new st[31];
                    new Float:vl;
                    get_state(PART:"bg", st, 30, vl);
                    if(!strcmp(st, "highlight focus")) {
                        set_state(PART:"bg", "highlight", 0.0);
                        set_state(PART:"elm.text", "highlight", 0.0);
                        set_state(PART:"elm.swallow.icon", "highlight", 0.0);
                    }
                    else if(!strcmp(st, "highlight")) {
                        set_state(PART:"bg", "highlight", 0.0);
                        set_state(PART:"elm.text", "highlight", 0.0);
                        set_state(PART:"elm.swallow.icon", "highlight", 0.0);
                    }
                    else {
                        set_state(PART:"bg", "default", 0.0);
                        set_state(PART:"elm.text", "default", 0.0);
                        set_state(PART:"elm.swallow.icon", "default", 0.0);
                    }
                }
            }
            program {
                name: "checked";
                signal: "checked";
                source: "";
                action: STATE_SET "highlight focus" 0.0;
                target: "bg";
                target: "elm.text";
                target: "elm.swallow.icon";
            }
            program {
                name: "unchecked";
                signal: "unchecked";
                source: "";
                action: STATE_SET "default" 0.0;
                target: "bg";
                target: "elm.text";
                target: "elm.swallow.icon";
            }
            program {
                name: "default_checked";
                signal: "default_checked";
                source: "";
                action: STATE_SET "highlight" 0.0;
                target: "bg";
                target: "elm.text";
                target: "elm.swallow.icon";
            }
        }
    }
}
